1. An immutable object is an object whose internal state remains constant after it has been entirely created. 
  This means that once the object has been assigned to a variable, we can neither update the reference nor mutate the internal state by any means.
2. The key benefits of keeping this class as immutable are caching, security, synchronization, and performance.
3. Java String Pool is the special memory region where Strings are stored by the JVM. Since Strings are immutable in Java,
   the JVM optimizes the amount of memory allocated for them by storing only one copy of each literal String in the pool. 
   This process is called interning.
4. 
